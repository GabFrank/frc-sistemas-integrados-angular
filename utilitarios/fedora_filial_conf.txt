--cambiar teclado a br-abnt2
localectl set-keymap br-abnt2
-- instalar entorno grafico: gnome
sudo dnf update -y
sudo dnf install @gnome-desktop -y
sudo systemctl set-default graphical.target
sudo reboot

-- instalar terminator
sudo dnf install terminator

-- instalar chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm

-- instalar postgres 13
--nueva forma
sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/F-38-x86_64/pgdg-fedora-repo-latest.noarch.rpm
sudo dnf -qy module disable postgresql
sudo dnf install -y postgresql13 postgresql13-server

sudo dnf module reset postgresql -y
sudo dnf install https://download.postgresql.org/pub/repos/yum/reporpms/F-38-x86_64/pgdg-fedora-repo-latest.noarch.rpm -y
sudo dnf install postgresql13-server postgresql13 -y
sudo /usr/pgsql-13/bin/postgresql-13-setup initdb
sudo systemctl enable --now postgresql-13
sudo firewall-cmd --add-service=postgresql --permanent
sudo firewall-cmd --reload
--  agregar lineas de configuracion a postgresql
sudo sh -c "echo 'host all all 0.0.0.0/0 md5' >> /var/lib/pgsql/13/data/pg_hba.conf"
sudo sh -c "echo 'host all all 10.10.10.0/24 md5' >> /var/lib/pgsql/13/data/pg_hba.conf"
sudo sh -c "echo 'local all franco peer' >> /var/lib/pgsql/13/data/pg_hba.conf"
sudo sh -c "echo 'local all franco md5' >> /var/lib/pgsql/13/data/pg_hba.conf"
sudo sh -c "echo \"listen_addresses = '*'\">> /var/lib/pgsql/13/data/postgresql.conf"
sudo sh -c "echo 'port=5551' >> /var/lib/pgsql/13/data/postgresql.conf"
sudo systemctl restart postgresql-13
-- crear superusuario
sudo -u postgres psql -p 5551 -c "CREATE USER franco WITH SUPERUSER PASSWORD 'franco'"
sudo -u postgres psql -p 5551 -c "CREATE DATABASE general WITH OWNER franco"
sudo -u postgres psql -p 5551 -c "CREATE DATABASE bodega WITH OWNER franco"
sudo -u postgres psql -p 5551 -c "drop DATABASE farmacia"
sudo -u postgres psql -p 5551 -c "CREATE DATABASE farmacia WITH OWNER franco"

sudo -u postgres psql -p 5551 -c "select * from pg_stat_replication;"
CREATE SUBSCRIPTION filial14sub
CONNECTION 'host=172.25.1.14 port=5551 dbname=general user=franco password=franco'
PUBLICATION filial14pub;

-- instalar zerotier-one
sudo dnf copr enable atim/zerotier-one -y
sudo dnf install zerotier-one -y
sudo systemctl start zerotier-one.service
sudo systemctl enable zerotier-one.service
-- bodega
sudo zerotier-cli join b6079f73c6af6767 
-- farma
sudo zerotier-cli join b15644912e9185a9
-- instalar rabbitmq
sudo dnf install rabbitmq-server -y
sudo systemctl start rabbitmq-server
sudo systemctl enable rabbitmq-server
sudo rabbitmq-plugins enable rabbitmq_management
sudo rabbitmq-plugins enable rabbitmq_shovel
sudo rabbitmq-plugins enable rabbitmq_shovel_management
sudo rabbitmqctl add_user franco franco
sudo rabbitmqctl set_user_tags franco administrator
sudo rabbitmqctl set_permissions -p / franco ".*" ".*" ".*"
rabbitmq-plugins enable rabbitmq_management
rabbitmq-plugins enable rabbitmq_shovel
rabbitmq-plugins enable rabbitmq_shovel_management
rabbitmqctl add_user franco franco
rabbitmqctl set_user_tags franco administrator
rabbitmqctl set_permissions -p / franco ".*" ".*" ".*"
-- instalar java -y
sudo dnf install java -y
-- abrir puertos necesarios
sudo firewall-cmd --add-port=15672/tcp --permanent
sudo firewall-cmd --add-port=5672/tcp --permanent
sudo firewall-cmd --add-port=5671/tcp --permanent
sudo firewall-cmd --add-port=8080/tcp --permanent
sudo firewall-cmd --add-port=8081/tcp --permanent
sudo firewall-cmd --add-port=8082/tcp --permanent
sudo firewall-cmd --add-port=80/tcp --permanent
sudo firewall-cmd --add-port=443/tcp --permanent
sudo firewall-cmd --add-port=6568/tcp --permanent
sudo firewall-cmd --add-port=7070/tcp --permanent
sudo firewall-cmd --add-port=631/tcp --permanent
sudo firewall-cmd --add-port=632/tcp --permanent
sudo firewall-cmd --add-port=5551/tcp --permanent
sudo firewall-cmd --add-port=5673/tcp --permanent
sudo firewall-cmd --add-port=15673/tcp --permanent
sudo firewall-cmd --reload
-- crear las carpetas para el servidor
mkdir /home/franco/FRC
mkdir /home/franco/FRC/pos
mkdir /home/franco/FRC/frc-server
mkdir /home/franco/FRC/postgres
mkdir /home/franco/FRC/resources
mkdir /home/franco/FRC/resources/images
-- copiar los archivos necesarios usando ssh y scp
scp franco@172.25.1.1:/home/franco/FRC/configuracion.json /home/franco/FRC/
scp franco@172.25.1.1:/home/franco/FRC/configuracion-local.json /home/franco/FRC/
scp franco@172.25.1.1:/home/franco/FRC/frc.png /home/franco/FRC/
scp franco@172.25.1.1:/home/franco/FRC/FRC.AppImage /home/franco/FRC/
scp franco@172.25.1.1:/home/franco/FRC/pos/posprinterinstall_integrated.tar.gz /home/franco/FRC/pos/
scp franco@172.25.1.1:/home/franco/FRC/frc-server/frc-server.jar /home/franco/FRC/frc-server/
scp franco@172.25.1.1:/home/franco/FRC/frc-server/application.properties /home/franco/FRC/frc-server/
scp franco@172.25.1.1:/home/franco/FRC/frc-server/application.yml /home/franco/FRC/frc-server/
scp franco@172.25.1.1:/home/franco/FRC/resources/images/logo.png /home/franco/FRC/resources/images/
sudo scp franco@172.25.1.1:/usr/share/applications/frc.desktop /usr/share/applications/
sudo chmod a+rwx /home/franco/FRC/FRC.AppImage
sudo update-desktop-database

-- instalar nuestro servicio
-- crear el servicio
sudo tee /etc/systemd/system/frc.service << "EOF" > /dev/null
[Unit]
Description=FRC Sistemas Integrados
After=network.target

[Service]
Type=simple
User=franco
WorkingDirectory=/home/franco/FRC/frc-server/
ExecStart=/usr/bin/java -jar /home/franco/FRC/frc-server/frc-server.jar
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target
EOF

-- recargar systemctl
sudo systemctl daemon-reload
-- iniciar el servicio
sudo systemctl start frc && journalctl -f -u frc
-- habilitar el servicio
sudo systemctl enable frc

-- configurar gnome
-- instalar Gnome shell integration
-- instalar la extension dock from dash
sudo dnf install gnome-tweaks -y
--ir a Barras de titulo de las ventanas -> Maximizar y Minimizar
-- instalar cups
sudo dnf install cups -y
sudo systemctl start cups
sudo systemctl enable cups
sudo cupsctl --remote-any
sudo cupsctl WebInterface=yes
sudo groupadd lpadmin
sudo usermod --append --groups lpadmin franco

-- configurar impresora en red con CUPS
-- primero compartir la impresora en la maquina y agregar el usuario franco
- instalar samba en fedora (si la impresora esta en una maquina windows)
sudo dnf install samba samba-client
- verificar si nos aparece la impresora en la maquina que tiene cups
smbclient -L //192.168.0.6 -U franco%franco
- si aparece,ir a la interface web de cups e instalar una nueva impresora samba
smb://franco:franco@172.25.0.22/TICKET_ADM
smb://bodegafranco:franco@192.168.1.119/ticket4
-- el driver a utilizar puede ser pos x
tar xvf /home/franco/FRC/pos/posprinterinstall_integrated.tar.gz
sudo sh /home/franco/FRC/posprinterinstall_integrated/setup.sh
-- tutorial en:
https://github.com/GabFrank/franco-system-backend-filial/releases/download/2.2.17/posprinterinstall_integrated.tar.gz

-- instalando anydesk
sudo tee /etc/yum.repos.d/anydesk.repo << "EOF" > /dev/null
[anydesk]
name=AnyDesk Stable
baseurl=http://rpm.anydesk.com/centos/${basearch}/
gpgkey=https://keys.anydesk.com/repos/RPM-GPG-KEY
EOF
sudo rpm --import https://keys.anydesk.com/repos/RPM-GPG-KEY
sudo dnf install anydesk

-- get anydesk id
anydesk --get-id
-- set contrasenha
sudo echo franco123 | sudo anydesk --set-password

--gnome xorg como default
sudo vim /etc/gdm/custom.conf
Open /etc/gdm/custom.conf and uncomment the line:
WaylandEnable=false
Add the following line to the [daemon] section:
DefaultSession=gnome-xorg.desktop

-- aumentar el tamanho de disco 
---Entrar en modo rescue
--- Verificar tamanho disponible
vgs
--- aumentar particion
lvresize -L +5G --resizefs /dev/mapper/fedora-root

-- Crear el archivo de self update:
sudo tee /home/franco/FRC/frc-server/selfUpdate.sh << "EOF" > /dev/null
#!/bin/bash

SERVICE_NAME=frc
NEW_JAR_PATH=/home/franco/FRC/frc-server/frc-server-update.jar
CURRENT_JAR_PATH=/home/franco/FRC/frc-server/frc-server.jar
BACKUP_JAR_PATH=/home/franco/FRC/frc-server/frc-server-backup.jar

# Backup the current jar
mv "$CURRENT_JAR_PATH" "$BACKUP_JAR_PATH"

# Replace with the new jar
mv "$NEW_JAR_PATH" "$CURRENT_JAR_PATH"

# Try to start the service
/bin/sudo /bin/systemctl restart "$SERVICE_NAME" && journalctl -f -u "$SERVICE_NAME"

echo "Update completed."

EOF

curl -LO https://github.com/GabFrank/franco-system-backend-filial/releases/download/2.4.0/frc-server.jar
curl -LO https://github.com/GabFrank/franco-system-backend-filial/releases/download/2.4.0/selfUpdate.sh
sudo chmod 777 selfUpdate.sh
sudo sudo chmod a+rwx selfUpdate.sh

sudo tee -a /etc/sudoers << "EOF" > /dev/null
franco ALL=(ALL) ALL
root ALL=(ALL) ALL
franco ALL=(ALL) NOPASSWD: /bin/systemctl start frc, /bin/systemctl stop frc, /bin/systemctl restart frc, /bin/mv /home/franco/FRC/*
EOF

sudo tee -a /home/franco/FRC/frc-server/application.properties << "EOF" > /dev/null
jarPath=/home/franco/FRC/frc-server
EOF

echo jarPath=C:\FRC\frc-server >> C:\FRC\frc-server\application.properties

https://github.com/GabFrank/frc-sistemas-integrados-angular/releases/download/2.1.32/FRC.AppImage
sudo chmod a+rwx /home/franco/FRC/FRC.AppImage
sudo update-desktop-database


-- instalar impresora para pronet
1 - crear el archivo del servicio
sudo tee /usr/local/bin/print_service.sh << "EOF" > /dev/null
#!/bin/bash
TARGET_DIR=/home/franco/Descargas
MAX_FILES=20
PRINTER_NAME=pronet

LOGFILE=/var/log/print_service.log
echo "$(date): Print service started" >> $LOGFILE

while true; do
    for file in "$TARGET_DIR"/impresion*.txt; do
        if [ ! -f "$file" ]; then
            echo "$(date): No files found to process" >> $LOGFILE
            continue
        fi

        echo "$(date): Found file $file" >> $LOGFILE

        lsof -p $$ > /dev/null with lsof "$file" > /dev/null
        if [ $? -eq 0 ]; then
            echo "$(date): File $file is still being written" >> $LOGFILE
            continue
        fi

        echo "$(date): File $file is ready for processing" >> $LOGFILE

	perl -pe 's/\\n/\n/g; s/\\x([0-9A-Fa-f]{2})/chr(hex($1))/ge' "$file" | lpr -P "$PRINTER_NAME"

        mv "$file" "$TARGET_DIR/printed$(date +%s).txt"

        echo "$(date): File $file has been printed and moved" >> $LOGFILE

        ls -1tr "$TARGET_DIR"/*.txt | head -n -"$MAX_FILES" | xargs -d '\n' rm -f --

        echo "$(date): Old files have been removed" >> $LOGFILE
    done
    sleep 1
done
EOF

2 - dar permisos al archivo 
sudo chmod +x /usr/local/bin/print_service.sh

3 - crear el servicio
sudo tee /etc/systemd/system/print.service << "EOF" > /dev/null
[Unit]
Description=Print Service

[Service]
ExecStart=/usr/local/bin/print_service.sh

[Install]
WantedBy=multi-user.target
EOF

4 - Recargar e iniciar
sudo systemctl daemon-reload
sudo systemctl enable print.service
sudo systemctl start print.service


https://donfrancobs.com.py/?code=
AQBqa7KtO16lVb-a-VFwQTp49N5_oWpM3ixZNi90nZNgLuKsLC1zkzHXENSHN5LYWt9W6vRy6kUR7GmhnEkzUU9CyCRdmurRmyBbUeHvqd0qVWClxGbr3ZLckTjklgsI48ORRyjMNsYtx7sT3fK5yazRk7FmC5RfsIR6HzLAMyKlPGkg3DY818hkw54H02XKhz8pYr8xlsJ-oD6gTKP69IodgLj-WtvA7oFnfw2u4o8LHQ#/

-- Manual IP
sudo nmcli con modify 'enp2s0' ifname enp2s0 ipv4.method manual ipv4.addresses 192.168.0.139/24 gw4 192.168.0.1 
sudo nmcli con mod 'enp2s0' ipv4.dns 8.8.8.8,8.8.4.4

scp franco@172.25.0.2:/home/franco/FRC/frc-server/application.properties /root/bodega/FRC/frc-server/
scp franco@172.25.0.2:/home/franco/FRC/frc-server/application.yml /root/bodega/FRC/frc-server/

echo franco123 | sudo anydesk --set-password	

-- para hacer refresh en las apps del desktop de fedora
sudo update-desktop-database

sudo chmod a+rwx /home/franco/FRC/FRC.AppImage
sudo update-desktop-database

-- configurar internet en rescue mode:
ip link set dev <interface_name> up
ip addr add <ip_address>/<netmask> dev <intesrface_name>
ip route add default via <gateway_ip_address>
sudo systemd-resolve --interface wlp2s0 --set-dns 8.8.8.8 --set-domain yourdomain.local
date -s "YYYY-MM-DD HH:MM:SS" //configurar hora para hacer dnf uptade

curl -X POST "http://localhost:8081/send-notification?topic=gold" \
  -H "Content-Type: application/json" \
  -d '{
    "subject": "some subject",
    "content": "Some long content",
    "image": "https://somedomain.com/example.jpg",
    "data": {
      "key1": "Value 1",
      "key2": "Value 2",
      "key3": "Value 3",
      "key4": "Value 4"
    }
  }'

  curl -X POST "http://localhost:8081/send-notification?topic=gold" \
     -H "Content-Type: application/json" \
     --data '{"title":"Some Title","body":"Some Body Content"}' \
     "https://oauth2.googleapis.com/token"


cuando se crea un item de transferencia, todavia no modifica el stock
solamente cuando confirme el item en la preparacion de mercaderia, ese item saldra del stock
en la preparacion de mercaderia, se puede modificar la cantidad, entonces
tambien debera modificar la cantidad del movimiento
