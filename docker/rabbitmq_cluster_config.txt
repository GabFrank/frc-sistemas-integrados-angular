
//cluster tutorial
https://github.com/marcel-dempers/docker-development-youtube-series

// primero tenemos que crear una red interna en docker
sudo docker network create frc
------------------------------------------------------------------------------------
// crear un archivo conf: rabbit.conf
listeners.tcp.default = 5672
default_user = franco
default_pass = franco

cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config
cluster_formation.classic_config.nodes.1 = rabbit@rabbit-0
cluster_formation.classic_config.nodes.2 = rabbit@rabbit-1

cluster_partition_handling = autoheal
------------------------------------------------------------------------------------
// comando para iniciar el servicio rabbit con el archivo de configuracion
// cambiar el RABBITMQ_ERLANG_COOKIE
// cambiar el hostname
// crear una carpeta rabbit-conf y agregar el archivo de configuracion

------- servidor ---------

sudo docker run \
-v /home/opc/FRC/docker/rabbit-conf/rabbit-0/:/config/ \
-e RABBITMQ_CONFIG_FILE=/config/rabbitmq \
-e RABBITMQ_ERLANG_COOKIE=WIWVHCDTCIUAWANLMQAW \
-e RABBITMQ_DEFAULT_USER=franco \
-e RABBITMQ_DEFAULT_PASS=franco \
--hostname rabbit-0 \
--name rabbit-0 \
--restart=always \
--network=frc \
-p 15672:15672 \
-p 5672:5672 \
-p 35197:35197 \
-p 4369:4369 \
-p 25672:25672 \
-d \
rabbitmq:3.8-management

sudo docker run \
-v /Users/gabfranck/workspace/franco-systems/frontend-angular/franco-dev-system-electron/docker/rabbit-conf/rabbit-0/:/config/ \
-e RABBITMQ_CONFIG_FILE=/config/rabbitmq \
-e RABBITMQ_ERLANG_COOKIE=WIWVHCDTCIUAWANLMQAW \
-e RABBITMQ_DEFAULT_USER=franco \
-e RABBITMQ_DEFAULT_PASS=franco \
--hostname rabbit-dev \
--name rabbit-dev \
--rm \
-p 15672:15672 \
-p 5672:5672 \
-p 35197:35197 \
-p 4369:4369 \
-p 25672:25672 \
-d \
rabbitmq:3.8-management

------- filiales windows (cambiar id filial)---------
docker run -v C:\FRC\docker\rabbit-conf\rabbit-1000\:/config/ ^
-e RABBITMQ_CONFIG_FILE=/config/rabbitmq ^
-e RABBITMQ_ERLANG_COOKIE=WIWVHCDTCIUAWANLMQAW ^
-e RABBITMQ_DEFAULT_USER=franco ^
-e RABBITMQ_DEFAULT_PASS=franco ^
--hostname rabbit-1000 ^
--name rabbit-1000 ^
--network=frc ^
-p 15672:15672 -p 5672:5672 -p 35197:35197 -p 4369:4369 -p 25672:25672 ^
--restart=always ^
-d ^
rabbitmq:3.8-management

// add server to host
echo 172.25.0.200 rabbit-0 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.200 rabbit@rabbit-0 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.1 rabbit-dev >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.1 rabbit@rabbit-dev >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.164.10 rabbit-14 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.164.10 rabbit@rabbit-14 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.23 rabbit-3 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.23 rabbit@rabbit-3 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.60 rabbit-15 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.60 rabbit@rabbit-15 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.190 rabbit-6 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.190 rabbit@rabbit-6 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.21 rabbit-11 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.21 rabbit@rabbit-11 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.106.87 rabbit-4 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.106.87 rabbit@rabbit-4 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.3 rabbit-10 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.3 rabbit@rabbit-10 >> %WINDIR%\System32\Drivers\Etc\Hosts
echo 172.25.0.4 rabbit@rabbit-1000 >> %WINDIR%\System32\Drivers\Etc\Hosts

172.25.0.200 rabbit@rabbit-0 
172.25.0.1 rabbit@rabbit-dev 
172.25.164.10 rabbit@rabbit-14 
172.25.0.23 rabbit@rabbit-3 
172.25.0.60 rabbit@rabbit-15 
172.25.0.190 rabbit@rabbit-6 
172.25.0.21 rabbit@rabbit-11 
172.25.106.87 rabbit@rabbit-4 
172.25.0.3 rabbit@rabbit-10 
172.25.0.4 rabbit@rabbit-1000


echo 172.25.0.1 rabbit-dev >> /etc/hosts
echo 172.25.0.1 rabbit@rabbit-dev >> /etc/hosts
sudo echo 172.25.0.190 rabbit-6 >> /etc/hosts
sudo echo 172.25.0.190 rabbit@rabbit-6 >> /etc/hosts
sudo echo 172.25.0.21 rabbit-11 >> /etc/hosts
sudo echo 172.25.0.21 rabbit@rabbit-11 >> /etc/hosts

echo cluster_formation.classic_config.nodes.6 = rabbit@rabbit-6 >> C:\FRC\docker\rabbit-conf\rabbit-0\rabbitmq.conf

// add node manualmente
docker exec -it rabbit-3 rabbitmqctl stop_app
docker exec -it rabbit-3 rabbitmqctl reset
docker exec -it rabbit-0 rabbitmqctl join_cluster rabbit@rabbit-0
docker exec -it rabbit-3 rabbitmqctl start_app
docker exec -it rabbit-0 rabbitmqctl cluster_status

// remove node manualmente
docker exec -it rabbit-3 rabbitmqctl forget_cluster_node rabbit@rabbit-dev

// see rabbit logs 
docker logs rabbit-3

// restart rabbit
docker exec -it rabbit-3 rabbitmqctl stop_app
docker exec -it rabbit-3 rabbitmqctl reset
docker exec -it rabbit-3 rabbitmqctl start_app

------------------------------------------------------------------------------------

// habilitar el plugin de federacion
docker exec -it rabbit-0 rabbitmq-plugins --offline enable rabbitmq_federation 
docker exec -it rabbit-1 rabbitmq-plugins --offline enable rabbitmq_federation 

------------------------------------------------------------------------------------

// aplicar politica de mirroring en nuestro cluster 
// servidor
sudo docker exec -it rabbit-0 rabbitmqctl set_policy ha-servidor "servidor" '{"ha-mode":"all","ha-sync-mode":"automatic"}'
sudo docker exec -it rabbit-0 rabbitmqctl set_policy ha-servidor-reply-to "servidor.reply.to" '{"ha-mode":"all","ha-sync-mode":"automatic"}'
// filial
rabbitmqctl set_policy filial2 "^filial.2(.reply.to)?$" '{"ha-mode": "nodes", "ha-params":["rabbit@rabbit-0", "rabbit@rabbit-2"]}' --priority 2 --apply-to queues
rabbitmqctl set_policy filial6-reply "filial.6.reply.to" '{"ha-mode": "nodes", "ha-params":["rabbit@rabbit-0", "rabbit@rabbit-6"]}' --priority 2 --apply-to queues

------------------------------------------------------------------------------------

// renombrar computadora en windows via powershell
powershell Rename-Computer -NewName "SUC-FIESTA1" -Force

------------------------------------------------------------------------------------
// instalar y habilitar ssh en windows powershell
Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH*'

# Install the OpenSSH Client
Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0

# Install the OpenSSH Server
Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0

# Start the sshd service
Start-Service sshd

# OPTIONAL but recommended:
Set-Service -Name sshd -StartupType 'Automatic'

# Confirm the Firewall rule is configured. It should be created automatically by setup. Run the following to verify
if (!(Get-NetFirewallRule -Name "OpenSSH-Server-In-TCP" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) {
    Write-Output "Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it..."
    New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
} else {
    Write-Output "Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists."
}

------------------------------------------------------------------------------------

// restart ssh en mac Os 
sudo launchctl unload  /System/Library/LaunchDaemons/ssh.plist 
sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist

get-content "cluster_formation.classic_config.nodes.4 = rabbit@rabbit-4" | % {$_ -replace "\<.*?\>",""} | Out-File C:\Users\John\Desktop\output.txt

// shovel
//servidor
sudo docker run \
-e RABBITMQ_DEFAULT_USER=franco \
-e RABBITMQ_DEFAULT_PASS=franco \
--hostname rabbit-0 \
--name rabbit-0 \
--restart=always \
--network=frc \
-p 15672:15672 \
-p 5672:5672 \
-p 35197:35197 \
-p 4369:4369 \
-p 25672:25672 \
-d \
rabbitmq:3.8-management

//filiales
docker run ^
-e RABBITMQ_DEFAULT_USER=franco ^
-e RABBITMQ_DEFAULT_PASS=franco ^
--name rabbit ^
--network=frc ^
-p 15672:15672 -p 5672:5672 -p 35197:35197 -p 4369:4369 -p 25672:25672 ^
--restart=always ^
-d ^
rabbitmq:3.8-management && docker exec -it rabbit bin/bash


//habilitar shovel
rabbitmq-plugins enable rabbitmq_shovel && rabbitmq-plugins enable rabbitmq_shovel_management && rabbitmqctl stop_app && rabbitmqctl start_app 

// conect servidor
rabbitmqctl set_parameter shovel filial-3 '{"src-protocol": "amqp091", "src-uri":"amqp://franco:franco@localhost", "src-queue": "filial.3", "dest-protocol": "amqp091", "dest-uri": "amqp://franco:franco@172.25.0.23", "dest-queue": "filial.3"}'
rabbitmqctl set_parameter shovel filial-3-reply '{"src-protocol": "amqp091", "src-uri":"amqp://franco:franco@localhost", "src-queue": "filial.3.reply.to", "dest-protocol": "amqp091", "dest-uri": "amqp://franco:franco@172.25.0.23", "dest-queue": "filial.3.reply.to"}'
// conect filial
rabbitmqctl set_parameter shovel filial-3 '{"src-protocol": "amqp091", "src-uri":"amqp://localhost", "src-queue": "filial.3", "dest-protocol": "amqp091", "dest-uri": "amqp://172.25.0.200", "dest-queue": "filial.3"}'
rabbitmqctl set_parameter shovel filial-3-reply '{"src-protocol": "amqp091", "src-uri":"amqp://franco:franco@localhost", "src-queue": "filial.3.reply.to", "dest-protocol": "amqp091", "dest-uri": "amqp://franco:franco@150.136.137.98", "dest-queue": "filial.3.reply.to"}'


// clean logs on server
-- clean docker unused volumes: 
docker volume prune
-- find bigger files:
sudo find /home -type f -exec du -Sh {} + | sort -rh | head -n 10


